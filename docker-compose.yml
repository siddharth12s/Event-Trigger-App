# version: "3.8"

# services:
#   postgres:
#     image: postgres:13
#     container_name: postgres
#     environment:
#       POSTGRES_USER: "segwise_user"
#       POSTGRES_PASSWORD: "password"
#       POSTGRES_DB: "segwise_db_2"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     networks:
#       - app-network
#     healthcheck:
#       test: ["CMD", "pg_isready", "-U", "segwise_user", "-d", "segwise_db_2"]
#       interval: 10s
#       retries: 5
#       start_period: 5s
#       timeout: 5s

#   django:
#     build: .
#     container_name: django
#     environment:
#       - DEBUG=True
#       - DB_HOST=postgres
#       - DB_PORT=5432
#       - DB_NAME=segwise_db_2
#       - DB_USER=segwise_user
#       - DB_PASSWORD=password
#       - DJANGO_SETTINGS_MODULE=segwise.settings
#     volumes:
#       - .:/app # Mount the current directory into the container
#     depends_on:
#       postgres:
#         condition: service_healthy
#     ports:
#       - "8000:8008"
#     networks:
#       - app-network
#     command: /bin/bash -c "./wait-for-it.sh postgres:5432 -- pip install -r /app/requirements.txt && python /app/manage.py migrate && python /app/manage.py runserver 0.0.0.0:8000"

#   celery:
#     build: .
#     container_name: celery
#     environment:
#       - DEBUG=True
#       - DB_HOST=postgres
#       - DB_PORT=5432
#       - DB_NAME=segwise_db_2
#       - DB_USER=segwise_user
#       - DB_PASSWORD=password
#       - CELERY_BROKER_URL=redis://redis:6389/0
#     volumes:
#       - .:/app # Mount the current directory into the container
#     depends_on:
#       - postgres
#       - django
#     networks:
#       - app-network
#     command: celery -A segwise worker --loglevel=info

#   celery-beat:
#     build: .
#     container_name: celery-beat
#     environment:
#       - DEBUG=True
#       - DB_HOST=postgres
#       - DB_PORT=5432
#       - DB_NAME=segwise_db_2
#       - DB_USER=segwise_user
#       - DB_PASSWORD=password
#       - CELERY_BROKER_URL=redis://redis:6389/0
#     volumes:
#       - .:/app # Mount the current directory into the container
#     depends_on:
#       - postgres
#       - django
#     networks:
#       - app-network
#     command: celery -A segwise worker beat --loglevel=info

#   redis:
#     image: redis:latest
#     container_name: redis
#     ports:
#       - "6389:6389"
#     networks:
#       - redis-server
#     restart: always

# volumes:
#   postgres_data:

# networks:
#   app-network:
#     driver: bridge

#   redis-server:
#     driver: bridge

version: "3.10"

services:
  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: "segwise_user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "segwise_db_2"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "segwise_user", "-d", "segwise_db_2"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

  segwise:
    build: .
    container_name: segwise
    environment:
      - DEBUG=True
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=segwise_db_2
      - DB_USER=segwise_user
      - DB_PASSWORD=password
      - DJANGO_SETTINGS_MODULE=segwise.settings
    volumes:
      - .:/app # Mount the current directory into the container
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    networks:
      - app-network
      - redis-server # Connect to the same network as Redis
    # command: /bin/bash -c "pip install -r /app/requirements.txt && python /app/manage.py migrate && python /app/manage.py runserver 0.0.0.0:8000"
    # command: /bin/bash -c "/app/wait-for-it.sh 0.0.0.0:5432 --timeout=60 -- pip install -r /app/requirements.txt && python /app/manage.py migrate && python /app/manage.py runserver 0.0.0.0:8000"
    command: /bin/bash -c "pip install -r /app/requirements.txt &&
      python /app/manage.py migrate api &&
      python /app/manage.py makemigrations &&
      python /app/manage.py migrate &&
      python /app/manage.py runserver 0.0.0.0:8000"

  celery:
    build: .
    container_name: celery
    environment:
      # - DEBUG=True
      # - DB_HOST=postgres
      # - DB_PORT=5432
      # - DB_NAME=segwise_db_2
      # - DB_USER=segwise_user
      # - DB_PASSWORD=password
      - CELERY_BROKER_URL=redis://redis:6379/0 # Correct Redis port
    volumes:
      - .:/app # Mount the current directory into the container
    depends_on:
      - postgres
      - segwise
    networks:
      - app-network
      - redis-server # Connect to the same network as Redis
    command: celery -A segwise worker --loglevel=info

  celery-beat:
    build: .
    container_name: celery-beat
    environment:
      # - DEBUG=True
      # - DB_HOST=postgres
      # - DB_PORT=5432
      # - DB_NAME=segwise_db_2
      # - DB_USER=segwise_user
      # - DB_PASSWORD=password
      - CELERY_BROKER_URL=redis://redis:6379/0 # Correct Redis port
    volumes:
      - .:/app # Mount the current directory into the container
    depends_on:
      - postgres
      - segwise
    networks:
      - app-network
      - redis-server # Connect to the same network as Redis
    command: celery -A segwise beat --loglevel=info

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379" # Corrected port to the default Redis port
    networks:
      - redis-server
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 5s
      timeout: 5s

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
  redis-server:
    driver: bridge
